-- zadanie 12.3

CREATE TABLE ISSUESLISTS (
                             ID INT PRIMARY KEY,
                             NAME VARCHAR(255) NOT NULL
);

CREATE TABLE ISSUES (
                        ID INT PRIMARY KEY,
                        ISSUESLIST_ID INT,
                        SUMMARY VARCHAR(255) NOT NULL,
                        DESCRIPTION VARCHAR(255),
                        USER_ID_ASSIGNEDTO INT,
                        FOREIGN KEY (ISSUESLIST_ID) REFERENCES ISSUESLISTS(ID)
);

INSERT INTO ISSUESLISTS (ID, NAME) VALUES (1, 'ToDo');
INSERT INTO ISSUESLISTS (ID, NAME) VALUES (2, 'In progress');
INSERT INTO ISSUESLISTS (ID, NAME) VALUES (3, 'Done');



INSERT INTO ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (1, 1, 'Zadanie 1', 'Opis zadania 1', 1);
INSERT INTO ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (2, 1, 'Zadanie 2', 'Opis zadania 2', 1);

INSERT INTO ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (3, 2, 'Zadanie 3', 'Opis zadania 3', 2);
INSERT INTO ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (4, 2, 'Zadanie 4', 'Opis zadania 4', 2);

INSERT INTO ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (5, 3, 'Zadanie 5', 'Opis zadania 5', 3);
INSERT INTO ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (6, 3, 'Zadanie 6', 'Opis zadania 6', 3);

-- nauka 12.4
SELECT ID, LASTNAME FROM USERS;

SELECT ID, FIRSTNAME FROM USERS
WHERE ID >= 3;

SELECT ID, FIRSTNAME FROM USERS
WHERE (ID >= 4 AND ID <= 10)
   OR ID = 1;

SELECT COUNT(*) FROM USERS;

SELECT MIN(ID), MAX(ID) FROM USERS;

SELECT SUM(ID), AVG(ID) FROM USERS;

SELECT SUM(ID) AS TOTAL, AVG(ID) AS AVERAGE FROM USERS;

SELECT U.FIRSTNAME, U.LASTNAME, P.BODY
FROM USERS U
         JOIN POSTS P ON U.ID = P.USER_ID;

SELECT USER_ID, COUNT(*) AS POSTS_NUMBER
FROM POSTS
GROUP BY USER_ID;

SELECT USER_ID, COUNT(*) AS POSTS_NUMBER
FROM POSTS
GROUP BY USER_ID
HAVING COUNT(*) > 1;

SELECT U.FIRSTNAME, U.LASTNAME, COUNT(*) AS POSTS_NUMBER
FROM USERS U JOIN POSTS P ON U.ID = P.USER_ID
GROUP BY P.USER_ID
HAVING COUNT(*) > 1;

SELECT U.FIRSTNAME, U.LASTNAME, COUNT(*) AS POSTS_NUMBER
FROM USERS U JOIN POSTS P ON U.ID = P.USER_ID
GROUP BY P.USER_ID
HAVING COUNT(*) > 1
ORDER BY U.LASTNAME, U.FIRSTNAME;

-- zadanie 12.4

SELECT I.SUMMARY, IL.NAME
FROM ISSUES I
         INNER JOIN ISSUESLISTS IL ON I.ISSUESLIST_ID = IL.ID;

SELECT I.SUMMARY, U.FIRSTNAME, U.LASTNAME
FROM ISSUES I
         INNER JOIN USERS U ON I.USER_ID_ASSIGNEDTO = U.ID;

SELECT U.FIRSTNAME, U.LASTNAME, COUNT(I.ID) AS TASK_COUNT
FROM USERS U
         INNER JOIN ISSUES I ON U.ID = I.USER_ID_ASSIGNEDTO
GROUP BY U.FIRSTNAME, U.LASTNAME;